---
description: 
globs: 
alwaysApply: false
---
---
description: Frontend React & MediaRecorder guidelines
globs:
  - frontend/src/**
alwaysApply: false
---

- Components live in `frontend/src/components/`; pages in `src/pages/`.  
- **AudioRecorder.tsx** must expose `onStop(blob)` and a record-state hook.  
- Prefer `useState`/`useEffect` over Redux for now.  
- Type every prop & hook return (`FC<Props>`).  
- After each question, auto-advance UI only when `/summarize` returns `status: "ok"`.

Example CSS-in-JS pattern:

```ts
<div className="flex flex-col gap-4 max-w-xl mx-auto p-6">
@frontend/src/components/AudioRecorder.tsx

yaml
Copy
Edit

---

## 4 Â· `.cursor/rules/privacy-compliance.mdc`  (ALWAYS)

```mdc
---
description: Simulated GDPR/Swiss privacy safeguards
alwaysApply: true
---

- **Do not** persist raw audio; store only a temp file path while processing.  
- Add `expires_at` column to every session record; default 24 h.  
- Provide `/secure-download/{token}` route that serves PDFs once, then deletes them.  
- Tag any real compliance gap with `# TODO: PRODUCTION COMPLIANCE`.  
- Include a test in `tests/backend/` that verifies vaporisation deletes DB rows and files.

Reference GDPR stub logic in `backend/app/utils/security.py`.